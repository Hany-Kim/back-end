<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ddabong.tripflow.board.dao.IBoardRepository">
<!--        id가 의미하는 것은 repository에서 "Board.save"-->
<!--        parameterType = "board"가 의미하는 것은 mybatis 에서 "com.codingrecipe.board.dto.BoardDTO 를 board라는 별칭으로 부르겠다-->
    <insert id="save" parameterType="com.ddabong.tripflow.board.dto.BoardDTO">
        insert into board_table(boardTitle, boardWriter, boardPass, boardContents)
        values(#{boardTitle}, #{boardWriter}, #{boardPass}, #{boardContents})
    </insert>

    <select id="findAll" resultType="com.ddabong.tripflow.board.dto.BoardDTO">
        select postid from tripflow.POST
        order by postid DESC;
    </select>


    <update id="updateHits" parameterType="long">
        update board_table set boardHits=boardHits+1 where id=#{id}
    </update>

    <select id="findById" parameterType="long" resultType="com.ddabong.tripflow.board.dto.BoardDTO">
        SELECT dd.likeid, dd.postid, dd.memberid, po.travelid, po.content
        FROM tripflow.DDABONG dd
        LEFT JOIN tripflow.POST po ON dd.postid = po.postid

        UNION ALL

        SELECT dd.likeid, dd.postid, dd.memberid, po.travelid, po.content
        FROM tripflow.DDABONG dd
        RIGHT JOIN tripflow.POST po ON dd.postid = po.postid
        WHERE dd.postid IS NULL;
    </select>

    <select id="findLike" resultType="com.ddabong.tripflow.board.dto.BoardDTO">
        select COUNT(d.likeid) AS likecount , p.postid, p.travelid ,p.content
        from tripflow.POST p
        join tripflow.DDABONG d on p.postid=d.postid
        where p.postid=#{id}
    </select>

    <select id="findTOP" resultType="com.ddabong.tripflow.board.dto.BoardDTO">
        SELECT
        d.postid,
        d.likecount,
        c.comcontentcount
        FROM
        (SELECT postid, COUNT(*) AS likecount
        FROM tripflow.DDABONG
        GROUP BY postid) d
        LEFT JOIN
        (SELECT postid, COUNT(*) AS comcontentcount
        FROM tripflow.COMMENT
        GROUP BY postid) c ON d.postid = c.postid
        order BY d.likecount desc
        limit 3;
    </select>

    <select id="findDetail" resultType="com.ddabong.tripflow.board.dto.BoardDTO">
        SELECT
        COUNT(d.likeid) AS likecount,
        p.postid,
        p.travelid,
        p.memberid,
        p.content,
        p.createdtime,
        (SELECT COUNT(*) FROM tripflow.COMMENT c WHERE c.postid = p.postid) AS comcontentcount
        FROM
        tripflow.POST p
        JOIN
        tripflow.DDABONG d ON p.postid = d.postid
        WHERE
        p.postid = #{id}
        GROUP BY
        p.postid, p.travelid, p.memberid, p.content;
    </select>

    <select id="findComment" resultType="com.ddabong.tripflow.board.dto.CommentDTO">
        select * from tripflow.COMMENT where postid = #{id}
        order by commentid asc;
    </select>

<!--    제목과 내용만 수정-->
    <update id="update">
        update board_table set boardTitle=#{boardTitle}, boardContents=#{boardContents} where id=#{id}
    </update>

<!--    이미지 조회 기능-->
    <select id="findImage" resultType="com.ddabong.tripflow.board.dto.ImageDTO">
        select i.imageid, i.filename, i.url from tripflow.IMAGE i
        Inner join tripflow.POST_IMAGE pi
        On i.imageid = pi.imageid
        where pi.postid = #{id}
    </select>

    <select id="findHash" resultType="com.ddabong.tripflow.board.dto.HashDTO">
        select h.hashname from tripflow.HASHTAG h
        INNER JOIN tripflow.HASHTAG_JOIN hj
        ON h.hashtagid = hj.hashtagid
        WHERE hj.postid = #{id};
    </select>

    <delete id="delete" parameterType="long">
        delete from board_table where id=#{id}
    </delete>

<!--    commentid는 알아서 1씩증가하도록 테이블에서 AUTO_INCREMENT를 사용-->
    <insert id="saveComment" parameterType="com.ddabong.tripflow.board.dto.CommentDTO">
        INSERT INTO tripflow.COMMENT
            (postid, travelid, commentid2, memberid, comcontent, createdtime)
        VALUES
            (#{postid},#{travelid},#{commentid2},#{memberid},#{comcontent},#{createdtime})
    </insert>

    <!--    postid는 알아서 1씩증가하도록 테이블에서 AUTO_INCREMENT를 사용-->
    <insert id="savePost" parameterType="com.ddabong.tripflow.board.dto.BoardDTO">
        INSERT INTO tripflow.POST
            (travelid, content, memberid, createdtime)
        VALUES
            (#{travelid},#{content},#{memberid},#{createdtime})
    </insert>
    <!--    imageid는 자동으로 증가 -->
    <insert id="saveImage" parameterType="com.ddabong.tripflow.board.dto.ImageDTO">
        INSERT INTO tripflow.IMAGE (filename, url, imagetype)
        VALUES (#{filename}, #{url},#{imagetype});
    </insert>

    <select id="findPostid" parameterType="com.ddabong.tripflow.board.dto.BoardDTO" >
        select postid, travelid from tripflow.POST where postid = (select max(postid) from tripflow.POST );
    </select>
    <insert id="savePostImage" parameterType="com.ddabong.tripflow.board.dto.PostImageDTO" >
        INSERT INTO tripflow.POST_IMAGE (imageid, postid, travelid)
        VALUES (#{imageid},#{postid},#{travelid});
    </insert>

    <select id="findImageid" parameterType="com.ddabong.tripflow.board.dto.PostImageDTO" >
        select max(imageid) from tripflow.IMAGE;
    </select>

    <select id="findMemberid" parameterType="java.lang.String" resultType="Long">
        select memberid from tripflow.MEMBER
        where userid = #{s};
    </select>

    <insert id="saveHash" parameterType="com.ddabong.tripflow.board.dto.HashDTO">
        INSERT INTO tripflow.HASHTAG(hashname)
        SELECT #{hashname}
        WHERE NOT EXISTS (
        SELECT 1 FROM tripflow.HASHTAG WHERE hashname = #{hashname}
        );
    </insert>

    <insert id="saveHashJoin" parameterType="com.ddabong.tripflow.board.dto.HashDTO">
        insert into tripflow.HASHTAG_JOIN(postid, travelid, hashtagid)
        values (#{postid}, #{travelid}, #{hashtagid});
    </insert>

    <select id="findHashid" parameterType="String" resultType="Long">
        select hashtagid from tripflow.HASHTAG
        where hashname = #{s};
    </select>

    <select id="findLikeCount" parameterType="Long" resultType="Long">
        SELECT COUNT(*) AS count
        FROM tripflow.DDABONG
        WHERE postid = #{id};
    </select>

    <select id="findCommentCount" parameterType="Long" resultType="Long">
        SELECT COUNT(*) AS count
        FROM tripflow.COMMENT
        WHERE postid = #{id};
    </select>

    <select id="findTravelid" parameterType="Long" resultType="Long">
        select travelid from tripflow.POST
        where postid = #{id};
    </select>

    <insert id="saveLike" parameterType="com.ddabong.tripflow.board.dto.MemberDTO">
        INSERT INTO tripflow.DDABONG(postid, memberid)
        VALUES (#{postid},#{memberid});
    </insert>

    <delete id="deleteLike" parameterType="com.ddabong.tripflow.board.dto.MemberDTO">
        DELETE FROM tripflow.DDABONG WHERE ( postid = #{postid} and memberid = #{memberid} );
    </delete>

    <select id="findLikeflag" parameterType="com.ddabong.tripflow.board.dto.BoardDTO" resultType="Boolean">
        SELECT CASE
            WHEN EXISTS (
                SELECT 1
                FROM tripflow.DDABONG
                WHERE postid = #{postid} and memberid = #{memberid}
            ) THEN 1
        ELSE 0
        END AS result;
    </select>

</mapper>